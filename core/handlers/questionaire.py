from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext

from core.utils.states import Form
from core.keyboards.builders import profile
from core.keyboards.confirm_keyboard import confirm_kb

from main import bot
from config import ADMIN_IDS


rmk = ReplyKeyboardRemove()

router = Router()


@router.callback_query(F.data == 'profile')
async def fill_profile(call: CallbackQuery, state: FSMContext):
    await state.set_state(Form.name)
    await call.message.answer(
        f"<b>–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º, –≤–≤–µ–¥–∏ —Å–≤–æ–µ –∏–º—è:</b>",
        reply_markup=profile(call.from_user.first_name)
    )


@router.message(Form.name)
async def form_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.update_data(tg_id=message.from_user.id) 
    await state.set_state(Form.age)
    await message.answer(f"<b>–û—Ç–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:</b>")


@router.message(Form.age)
async def form_age(message: Message, state: FSMContext):
    if message.text.isdigit():
        age = int(message.text)
        if age <= 99:
            await state.update_data(age=age)
            await state.set_state(Form.experience)
            await message.answer(
                f"<b>–ß—Ç–æ –Ω–∞—Å—á—ë—Ç –æ–ø—ã—Ç–∞? –ë—ã–ª –ª–∏ —Ç—ã –≤ –ø–æ–¥–æ–±–Ω—ã—Ö —Å—Ç–∞–∫–∞—Ö?</b>",
                reply_markup=profile(["–î–∞, –±—ã–ª", "–ù–µ—Ç, –Ω–µ –±—ã–ª"])
            )   
        else:
            await message.answer(f"<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∞—Å—Ç–æ—è—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç ‚ö†Ô∏è</b>")
    else:
        await message.answer(f"<b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –≤–æ–∑—Ä–∞—Å—Ç–∞ ‚ö†Ô∏è</b>")

@router.message(Form.experience, F.text.casefold().in_(["–¥–∞, –±—ã–ª", "–Ω–µ—Ç, –Ω–µ –±—ã–ª"]))
async def form_experience(message: Message, state: FSMContext):
    await state.update_data(experience=message.text)
    await state.set_state(Form.about)
    await message.answer(f"<b>–ü–æ—á—Ç–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏. –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ, –≤ –∫–∞–∫–∏—Ö —Å—Ç–∞–∫–∞—Ö —Ç—ã –±—ã–ª, –∫–∞–∫ –¥–∞–≤–Ω–æ –∏–≥—Ä–∞–µ—à—å? –í –∫–æ–Ω—Ü–µ —É–∫–∞–∂–∏ —Å–≤–æ–π discord –¥–ª—è —Å–≤—è–∑–∏!</b>", reply_markup=rmk)


@router.message(Form.experience)
async def incorrect_form_experience(message: Message, state: FSMContext):
    await message.answer("–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É")


@router.message(Form.about)
async def form_about(message: Message, state: FSMContext):
    if len(message.text) < 5:
        await message.answer(f"<b>–Å—É, —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ –∏–Ω—Ñ—ã, —Ç–∞–∫ —Ç—ã —Ç–æ—á–Ω–æ –Ω–µ –ø—Ä–æ–π–¥—ë—à—å. –ù–∞–ø–∏—à–∏ –æ —Å–µ–±–µ –ø–æ–¥—Ä–æ–±–Ω–æ, —ç—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ!</b>")
    else:
        await state.update_data(about=message.text)
        await state.update_data(tg_id=message.from_user.id) 
        await state.set_state(Form.photo)
        await message.answer(f"<b>–ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥. –ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å–≤–æ–∏—Ö –∏–≥—Ä–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º.\nP.S. –≠—Ç–æ –≤–∞–∂–Ω–æ, —Ç–∫ –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–Ω–∞—Ç—å –≤–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –∏ —Å—Ç–∞—Ç–∏–∫</b>")


@router.message(Form.photo, F.photo)
async def form_photo(message: Message, state: FSMContext):
    photo_file_id = message.photo[-1].file_id
    data = await state.get_data()
    await state.clear()

    formatted_text = []
    [
        formatted_text.append(f"{key}: {value}")
        for key, value in data.items()
    ]

    for admin_id in ADMIN_IDS:
        await bot.send_photo(
            admin_id,
            photo_file_id,
            caption="\n".join(formatted_text),
            reply_markup=confirm_kb()
        )

    await message.answer(f"<b>–ê–Ω–∫–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –°–ø–∞—Å–∏–±–æ!üî•\n–û–∂–∏–¥–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏</b>")


@router.message(Form.photo, ~F.photo)
async def incorrect_form_photo(message: Message, state: FSMContext):
    await message.answer('<b>–ù–µ –ø–æ–Ω–∏–º–∞—é —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏\n(–ù–µ —É–±–∏—Ä–∞–π—Ç–µ –≥–∞–ª–æ—á–∫—É "–°–∂–∞—Ç—å —Ñ–æ—Ç–æ")</b>')
